version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
commands:
   # Exercise - Rollback
   destroy_environment:

    steps:
       - run:
          name: Destroy environment
          when: on_fail
          command: |
            # curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            # unzip awscliv2.zip
            # sudo ./aws/install
            echo ${CIRCLE_WORKFLOW_ID:0:7}
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:

  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
  
  configure_infrastructure: 
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - add_ssh_keys:
                # You can get this ID in the section where you registered the SSH Key
                fingerprints: ["e3:4a:8b:5f:20:0c:d5:46:9e:3f:0e:d5:99:d3:d8:b7"] 
        - run:
            name: Install Ansible
            command: |
              # Install Ansible
        - run:
            name: Install dependencies
            command: |
              # install the dependencies needed for your playbook
              apk add --update ansible 
        - run:
            name: Configure server
            command: |
              ansible-playbook -i inventory.txt main.yml

  # Exercise: Smoke Testing
  smoke_test:
    docker:
        - image: amazon/aws-cli
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command:  return 1

      - destroy_environment
       


workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure
      # - configure_infrastructure:
      #     requires:
      #       - create_infrastructure

